{"version":3,"sources":["component/About.js","component/Navbar.js","component/Textform.js","component/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["About","props","myStyle","color","mode","backgroundColor","className","style","id","type","Navbar","to","title","aboutText","onClick","toggleMode","role","htmlFor","Textform","useState","text","setText","heading","value","placeholder","onChange","event","target","rows","disabled","length","newText","toUpperCase","showAlert","toLowerCase","split","map","currentValue","slice","join","document","getElementById","select","navigator","clipboard","writeText","getSelection","removeAllRanges","filter","element","Alert","height","alert","class","word","lower","charAt","capatilize","msg","defaultProps","App","setMode","setAlert","message","setTimeout","body","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.257f8516.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport default function About(props) {\r\n    \r\n        // const [myStyle, setMyStyle] = useState({\r\n        //      color: 'black',\r\n        //      backgroundColor: 'white'\r\n        // });   \r\n        let myStyle = {\r\n            color: props.mode === 'dark'?'white':'#042743',\r\n            backgroundColor: props.mode === 'dark'?'rgb(36, 74, 104)':'white'\r\n        }\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <h1 className=\"my-3\" style={{color: props.mode === 'dark'?'white':'#042743'}}>About Us</h1>\r\n            <div className=\"accordion\" id=\"accordionExample\">\r\n                <div className=\"accordion-item\">\r\n                    <h2 className=\"accordion-header\" id=\"headingOne\">\r\n                        <button className=\"accordion-button\" style={myStyle} type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseOne\" aria-expanded=\"true\" aria-controls=\"collapseOne\">\r\n                            <strong>Analyze your text</strong>\r\n                        </button>\r\n                    </h2>\r\n                    <div id=\"collapseOne\" className=\"accordion-collapse collapse show\" style={myStyle} aria-labelledby=\"headingOne\" data-bs-parent=\"#accordionExample\">\r\n                        <div className=\"accordion-body\">\r\n                            TestUtils gives you a way to analyze your text quickly and efficiently. Be it word count, character count or.\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"accordion-item\">\r\n                    <h2 className=\"accordion-header\" id=\"headingTwo\">\r\n                        <button className=\"accordion-button collapsed\" style={myStyle} type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseTwo\" aria-expanded=\"false\" aria-controls=\"collapseTwo\">\r\n                            <strong>Free to use</strong>\r\n                        </button>\r\n                    </h2>\r\n                    <div id=\"collapseTwo\" className=\"accordion-collapse collapse\" style={myStyle} aria-labelledby=\"headingTwo\" data-bs-parent=\"#accordionExample\">\r\n                        <div className=\"accordion-body\">\r\n                           TextUtils is a free character counter tool that provider instant count & worf count statistics for a given text.\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"accordion-item\">\r\n                    <h2 className=\"accordion-header\" id=\"headingThree\">\r\n                        <button className=\"accordion-button collapsed\" style={myStyle} type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseThree\" aria-expanded=\"false\" aria-controls=\"collapseThree\">\r\n                            <strong>Browser Compatible</strong>\r\n                        </button>\r\n                    </h2>\r\n                    <div id=\"collapseThree\" className=\"accordion-collapse collapse\" style={myStyle} aria-labelledby=\"headingThree\" data-bs-parent=\"#accordionExample\">\r\n                        <div className=\"accordion-body\">\r\n                            This word counter software works in any web browser such as chrome, firefox, intternet explorer, safari, opera.\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>          \r\n        </div>\r\n    )\r\n}\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default function Navbar(props) {\r\n    return (\r\n        <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n            <div className=\"container-fluid\">\r\n                <Link className=\"navbar-brand\" to=\"/\">\r\n                    {props.title}\r\n                </Link>\r\n                <button\r\n                    className=\"navbar-toggler\"\r\n                    type=\"button\"\r\n                    data-bs-toggle=\"collapse\"\r\n                    data-bs-target=\"#navbarSupportedContent\"\r\n                    aria-controls=\"navbarSupportedContent\"\r\n                    aria-expanded=\"false\"\r\n                    aria-label=\"Toggle navigation\"\r\n                >\r\n                    <span className=\"navbar-toggler-icon\"></span>\r\n                </button>\r\n                <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n                    <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n                        <li className=\"nav-item\">\r\n                            <Link className=\"nav-link\" aria-current=\"page\" to=\"/\">\r\n                                Home\r\n                            </Link>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <Link className=\"nav-link\" to=\"/about\">\r\n                                {props.aboutText}\r\n                            </Link>\r\n                        </li>\r\n                    </ul>\r\n                    {/* <form className=\"d-flex\">\r\n                        <input\r\n                            className=\"form-control me-2\"\r\n                            type=\"search\"\r\n                            placeholder=\"Search\"\r\n                            aria-label=\"Search\"\r\n                        />\r\n                        <button className=\"btn btn-outline-success\" type=\"submit\">\r\n                            Search\r\n                        </button>\r\n                    </form> */}\r\n                    <div className={`form-check form-switch text-${props.mode === 'light'?'dark':'light'}`}>\r\n                        <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckDefault\" />\r\n                        <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable {props.mode === 'dark'?'light':'dark'}Mode</label>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </nav>\r\n    );\r\n}\r\n\r\nNavbar.propTypes = {\r\n    title: PropTypes.string.isRequired,\r\n    aboutText: PropTypes.string.isRequired\r\n};\r\n\r\n// Specifies the default values for props:\r\nNavbar.defaultProps = {\r\n    title: 'Set title here',\r\n    aboutText: 'About'\r\n};\r\n","import React, { useState } from 'react'\r\n\r\nexport default function Textform(props) {\r\n\r\n    // Upper Case\r\n\r\n    const handleUpClick = () =>{\r\n        // console.log(\"Uppercase was click: \" + text);\r\n        let newText = text.toUpperCase();\r\n        setText(newText);\r\n        props.showAlert('Converted to Upper Case!','success');\r\n    }\r\n\r\n    // Lower Case\r\n\r\n    const handleLoClick = () =>{\r\n        // console.log(\"Uppercase was click: \" + text);\r\n        let newText = text.toLowerCase();\r\n        setText(newText);\r\n        props.showAlert('Converted to Lower Case!','success');\r\n    }\r\n\r\n    // Clear Case\r\n\r\n    const handleClearClick = () =>{\r\n        let newText = '';\r\n        setText(newText);\r\n        props.showAlert('Text Cleared!', 'success');\r\n    }\r\n    \r\n    // Capitalize Case\r\n\r\n    const handleCapitalClick = () => {\r\n        let newText = text.split(\" \").map((currentValue) => {\r\n            let newText = currentValue[0].toUpperCase() + currentValue.slice(1);\r\n            return newText;\r\n        });\r\n        setText(newText.join(\" \"));\r\n        props.showAlert('Converted to Capatilize Case!','success');\r\n    }\r\n\r\n    // Copy Case\r\n\r\n    const handleCopy = ()=>{\r\n        var text = document.getElementById('myBox');\r\n        text.select();\r\n        navigator.clipboard.writeText(text.value);\r\n        document.getSelection().removeAllRanges();\r\n        props.showAlert('Copied to Clipboard!', 'success');\r\n    }\r\n\r\n    // Extra Spaces Case\r\n\r\n    const handleExtraSpaces = ()=>{\r\n        let newText = text.split(/[ ]+/);\r\n        setText(newText.join(\" \"));\r\n        props.showAlert('Removed Extra Spaces!', 'success');\r\n    }\r\n\r\n    const handleOnChange = (event)=>{\r\n        // console.log(\"On change\");\r\n        setText(event.target.value);\r\n    }\r\n\r\n    \r\n    // Declare a new state variable, which we'll call \"count\"\r\n    const [text, setText] = useState(\"\");\r\n    // text = \"new text\" // Wrong way to change the state\r\n    // setText(\"new text\"); // Correct way to change the state\r\n    return (\r\n        <>\r\n        <div className=\"container\" style={{color: props.mode === 'dark'?'white':'#042743'}}>\r\n            <h1>{props.heading}</h1>\r\n            <div className=\"mb-3\">\r\n                <textarea className=\"form-control\" style={{backgroundColor: props.mode === 'dark'?'#110f24':'white', color: props.mode === 'dark'?'white':'#042743'}} value={text} placeholder=\"Enter your text\" onChange={handleOnChange} id=\"myBox\" rows=\"8\"></textarea>\r\n            </div>\r\n            <button disabled={text.length===0} className=\"btn btn-sm btn-dark mx-1 my-1\" onClick={handleUpClick}>Upper Case</button>\r\n            <button disabled={text.length===0} className=\"btn btn-sm btn-dark mx-1 my-1\" onClick={handleLoClick}>Lower Case</button>\r\n            <button disabled={text.length===0} className=\"btn btn-sm btn-dark mx-1 my-1\" onClick={handleClearClick}>Clear Text</button>\r\n            <button disabled={text.length===0} className=\"btn btn-sm btn-dark mx-1 my-1\" onClick={handleCapitalClick}>Capatilized Case</button>\r\n            <button disabled={text.length===0} className=\"btn btn-sm btn-dark mx-1 my-1\" onClick={handleCopy}>Copy Text</button>\r\n            <button disabled={text.length===0} className=\"btn btn-sm btn-dark mx-1 my-1\" onClick={handleExtraSpaces}>Remove Extra Spaces</button>\r\n            \r\n        </div>\r\n\r\n        <div className=\"container my-3\" style={{color: props.mode === 'dark'?'white':'#042743'}}>\r\n            <h2>Your Text Summary</h2>\r\n            <p>{text.split(/\\s+/).filter((element)=>{return element.length!==0}).length} words and {text.length} character</p>\r\n            <p>{0.008 * text.split(\" \").filter((element)=>{return element.length!==0}).length} Minutes read</p>\r\n            <h2>Preview</h2>\r\n            <p>{text.length > 0 ? text: \"Nothing to Preview!\"}</p>\r\n        </div>\r\n\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Alert(props) {\r\n   \r\n    const capatilize = (word)=>{\r\n           const lower = word.toLowerCase();\r\n           return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n    }\r\n\r\n    return (\r\n        <div style={{height: '50px'}}>\r\n        {props.alert && <div class={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n            <strong>{capatilize(props.alert.type)}</strong>: {props.alert.msg} \r\n             </div>}\r\n             </div>\r\n        \r\n    )\r\n}\r\n","import './App.css';\nimport About from './component/About';\nimport Navbar from './component/Navbar';\nimport Textform from './component/Textform';\nimport React, { useState } from 'react'\nimport Alert from './component/Alert';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route  \n} from \"react-router-dom\";\n\n\nfunction App() {\n  const [mode, setMode] = useState('light'); //weather dark mode enable or not\n\n  const [alert, setAlert] = useState(null);\n\n  const showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type\n    })\n    setTimeout(() => {\n      setAlert(null);\n    }, 1500);\n  }\n\n  const toggleMode = () => {\n    if (mode === 'light') {\n      setMode('dark');\n      document.body.style.backgroundColor = '#042743';\n      showAlert('Dark mode has been enabled', 'success');\n      document.title = 'TextUtils - Dark Mode';\n      // setInterval(() => {\n      //   document.title = 'TextUtils is amazing';\n      // }, 2000);\n      // setInterval(() => {\n      //   document.title = 'Install TextUtils Now';\n      // }, 1500);\n    }\n    else {\n      setMode('light')\n      document.body.style.backgroundColor = 'white';\n      showAlert('Light mode has been enabled', 'success');\n      document.title = 'TextUtils - Light Mode';\n    }\n  }\n\n  return (\n    <>\n      {/* <Navbar title='TextUtils' aboutText='About TextUtils'/> */}\n      {/* <Navbar/> */}\n      <Router>\n        <Navbar title='TextUtils' mode={mode} toggleMode={toggleMode} />\n        <Alert alert={alert} />\n        <div className=\"container my-3\">\n          <Switch>\n            <Route exact path=\"/about\">\n              <About  mode={mode}/>\n            </Route>\n            <Route exact path=\"/\">\n              <Textform showAlert={showAlert} heading=\"Enter the text to analyze below\" mode={mode} />\n              {/* <About/> */}\n            </Route>\n          </Switch>\n        </div>\n      </Router>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}